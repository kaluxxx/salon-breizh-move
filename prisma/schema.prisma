// schema.prisma

generator client {
  provider = "prisma-client-js"
}

generator jsonSchema {
  provider              = "prisma-json-schema-generator"
  includeRequiredFields = "true"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

enum Civility {
  MR
  MRS
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  role          Role      @default(USER)
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]

  @@map("breizhmove_users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("breizhmove_accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("breizhmove_sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("breizhmove_verificationtokens")
}

model QuoteRequest {
  id        String   @id @default(cuid())
  company   String
  name      String
  function  String
  email     String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("breizhmove_quote_requests")
}

model BadgeRequest {
  id        String   @id @default(cuid())
  name      String
  email     String
  company   String
  jobTitle  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("breizhmove_badge_requests")
}

model Contact {
  id        String @id @default(cuid())
  firstName String
  lastName  String
  email     String
  message   String

  @@map("breizhmove_contacts")
}
